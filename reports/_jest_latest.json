{"numFailedTestSuites":6,"numFailedTests":18,"numPassedTestSuites":18,"numPassedTests":131,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":24,"numTotalTests":149,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1758145573206,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Flow complet Bridge → Trading → Liquidity"],"duration":57,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:301:36)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Flow complet Bridge → Trading → Liquidity devrait exécuter le flow complet avec succès","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145574893,"status":"failed","title":"devrait exécuter le flow complet avec succès"},{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Flow complet Bridge → Trading → Liquidity"],"duration":11,"failing":false,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:340:38)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Flow complet Bridge → Trading → Liquidity devrait gérer les erreurs et continuer le traitement","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145574970,"status":"failed","title":"devrait gérer les erreurs et continuer le traitement"},{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Résumé final JSON"],"duration":8,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:435:36)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Résumé final JSON devrait générer un résumé JSON complet","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145574983,"status":"failed","title":"devrait générer un résumé JSON complet"}],"endTime":1758145575026,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Flow complet Bridge → Trading → Liquidity › devrait exécuter le flow complet avec succès\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 299 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39mroute)\u001b[33m.\u001b[39mtoBe(\u001b[32m'cctp'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 300 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 301 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 302 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39mtxSignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 303 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39mactualSlippage)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 304 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:301:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Flow complet Bridge → Trading → Liquidity › devrait gérer les erreurs et continuer le traitement\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 338 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 339 |\u001b[39m       \u001b[90m// Le bridge échoue, mais on continue avec les autres étapes\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 340 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 341 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Bridge error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 342 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 343 |\u001b[39m       \u001b[90m// Étape 2: Swap (devrait réussir)\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:340:38)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Résumé final JSON › devrait générer un résumé JSON complet\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 433 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'📊 Résumé final complet:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(finalSummary\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 434 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 435 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 436 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 437 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 438 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mliquidity\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:435:36)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts","startTime":1758145573651,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait exécuter un swap 10 USDC → PENGU avec succès","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758145575453,"status":"passed","title":"devrait exécuter un swap 10 USDC → PENGU avec succès"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait gérer le slippage élevé correctement","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145575471,"status":"passed","title":"devrait gérer le slippage élevé correctement"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait gérer les erreurs de solde insuffisant","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145575477,"status":"passed","title":"devrait gérer les erreurs de solde insuffisant"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Gestion des erreurs réseau"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\trading.pengu.test.ts:295:30)"],"fullName":"E2E Trading - PENGU via Jupiter Gestion des erreurs réseau devrait gérer les erreurs de réseau avec retry","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145575481,"status":"failed","title":"devrait gérer les erreurs de réseau avec retry"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Résumé des diagnostics"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Résumé des diagnostics devrait afficher un résumé JSON des résultats de trading","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145575503,"status":"passed","title":"devrait afficher un résumé JSON des résultats de trading"}],"endTime":1758145575536,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Trading - PENGU via Jupiter › Gestion des erreurs réseau › devrait gérer les erreurs de réseau avec retry\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 293 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'Résultat swap avec retry:'\u001b[39m\u001b[33m,\u001b[39m result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 294 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 295 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 296 |\u001b[39m       expect(mockJupiterApi\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Premier appel échoué, deuxième réussi\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 297 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 298 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion erreur réseau avec retry confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/trading.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:295:30)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\trading.pengu.test.ts","startTime":1758145575117,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":8,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:117:30)"],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait créer une position USDC/PENGU avec succès","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145575863,"status":"failed","title":"devrait créer une position USDC/PENGU avec succès"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\nReceived string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\nReceived string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:158:28)"],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait gérer les erreurs de solde insuffisant","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145575885,"status":"failed","title":"devrait gérer les erreurs de solde insuffisant"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait gérer les erreurs de pool invalide","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145575890,"status":"passed","title":"devrait gérer les erreurs de pool invalide"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Gestion des erreurs réseau"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:227:30)"],"fullName":"E2E Liquidity - PENGU Concentrated Gestion des erreurs réseau devrait gérer les erreurs de réseau avec retry","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145575893,"status":"failed","title":"devrait gérer les erreurs de réseau avec retry"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Validation des paramètres"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Montant invalide\"\u001b[39m\nReceived string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Montant invalide\"\u001b[39m\nReceived string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:260:28)"],"fullName":"E2E Liquidity - PENGU Concentrated Validation des paramètres devrait valider les paramètres de position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145575897,"status":"failed","title":"devrait valider les paramètres de position"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Résumé des diagnostics"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:303:35)"],"fullName":"E2E Liquidity - PENGU Concentrated Résumé des diagnostics devrait afficher un résumé JSON des résultats de liquidité","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145575900,"status":"failed","title":"devrait afficher un résumé JSON des résultats de liquidité"}],"endTime":1758145575940,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Création de position de liquidité › devrait créer une position USDC/PENGU avec succès\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 115 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m       \u001b[90m// Vérifications\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 117 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m       expect(result\u001b[33m.\u001b[39mpositionId)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 119 |\u001b[39m       expect(result\u001b[33m.\u001b[39msignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m       expect(result\u001b[33m.\u001b[39mticks)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:117:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Création de position de liquidité › devrait gérer les erreurs de solde insuffisant\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\n    Received string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 156 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 158 |\u001b[39m       expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Solde insuffisant'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 159 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 160 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion solde insuffisant confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 161 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:158:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Gestion des erreurs réseau › devrait gérer les erreurs de réseau avec retry\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 225 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'Résultat position avec retry:'\u001b[39m\u001b[33m,\u001b[39m result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 226 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 227 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 228 |\u001b[39m       expect(mockConnection\u001b[33m.\u001b[39msendRawTransaction)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 229 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion erreur réseau avec retry confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:227:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Validation des paramètres › devrait valider les paramètres de position\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Montant invalide\"\u001b[39m\n    Received string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 258 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 259 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 260 |\u001b[39m       expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Montant invalide'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 261 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 262 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Validation paramètres confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 263 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:260:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Résumé des diagnostics › devrait afficher un résumé JSON des résultats de liquidité\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 301 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'📊 Diagnostics liquidité:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(diagnostics\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 302 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 303 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 304 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39mpositionId)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 305 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39msignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 306 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39mticks)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:303:35)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts","startTime":1758145575571,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait exécuter un swap 10 USDC → PENGU avec succès","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758145576498,"status":"passed","title":"devrait exécuter un swap 10 USDC → PENGU avec succès"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait gérer le slippage élevé correctement","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145576508,"status":"passed","title":"devrait gérer le slippage élevé correctement"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait gérer les erreurs de solde insuffisant","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145576518,"status":"passed","title":"devrait gérer les erreurs de solde insuffisant"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Gestion des erreurs réseau"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\trading.pengu.test.ts:295:30)"],"fullName":"E2E Trading - PENGU via Jupiter Gestion des erreurs réseau devrait gérer les erreurs de réseau avec retry","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145576523,"status":"failed","title":"devrait gérer les erreurs de réseau avec retry"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Résumé des diagnostics"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Résumé des diagnostics devrait afficher un résumé JSON des résultats de trading","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145576540,"status":"passed","title":"devrait afficher un résumé JSON des résultats de trading"}],"endTime":1758145576560,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Trading - PENGU via Jupiter › Gestion des erreurs réseau › devrait gérer les erreurs de réseau avec retry\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 293 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'Résultat swap avec retry:'\u001b[39m\u001b[33m,\u001b[39m result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 294 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 295 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 296 |\u001b[39m       expect(mockJupiterApi\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Premier appel échoué, deuxième réussi\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 297 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 298 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion erreur réseau avec retry confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/trading.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:295:30)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\trading.pengu.test.ts","startTime":1758145575976,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Flow complet Bridge → Trading → Liquidity"],"duration":16,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:301:36)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Flow complet Bridge → Trading → Liquidity devrait exécuter le flow complet avec succès","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145577005,"status":"failed","title":"devrait exécuter le flow complet avec succès"},{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Flow complet Bridge → Trading → Liquidity"],"duration":9,"failing":false,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:340:38)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Flow complet Bridge → Trading → Liquidity devrait gérer les erreurs et continuer le traitement","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145577044,"status":"failed","title":"devrait gérer les erreurs et continuer le traitement"},{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Résumé final JSON"],"duration":6,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:435:36)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Résumé final JSON devrait générer un résumé JSON complet","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145577055,"status":"failed","title":"devrait générer un résumé JSON complet"}],"endTime":1758145577099,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Flow complet Bridge → Trading → Liquidity › devrait exécuter le flow complet avec succès\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 299 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39mroute)\u001b[33m.\u001b[39mtoBe(\u001b[32m'cctp'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 300 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 301 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 302 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39mtxSignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 303 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39mactualSlippage)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 304 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:301:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Flow complet Bridge → Trading → Liquidity › devrait gérer les erreurs et continuer le traitement\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 338 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 339 |\u001b[39m       \u001b[90m// Le bridge échoue, mais on continue avec les autres étapes\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 340 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 341 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Bridge error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 342 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 343 |\u001b[39m       \u001b[90m// Étape 2: Swap (devrait réussir)\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:340:38)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Résumé final JSON › devrait générer un résumé JSON complet\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 433 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'📊 Résumé final complet:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(finalSummary\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 434 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 435 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 436 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 437 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 438 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mliquidity\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:435:36)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts","startTime":1758145576600,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":7,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:117:30)"],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait créer une position USDC/PENGU avec succès","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145577407,"status":"failed","title":"devrait créer une position USDC/PENGU avec succès"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\nReceived string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\nReceived string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:158:28)"],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait gérer les erreurs de solde insuffisant","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145577430,"status":"failed","title":"devrait gérer les erreurs de solde insuffisant"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait gérer les erreurs de pool invalide","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145577435,"status":"passed","title":"devrait gérer les erreurs de pool invalide"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Gestion des erreurs réseau"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:227:30)"],"fullName":"E2E Liquidity - PENGU Concentrated Gestion des erreurs réseau devrait gérer les erreurs de réseau avec retry","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145577439,"status":"failed","title":"devrait gérer les erreurs de réseau avec retry"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Validation des paramètres"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Montant invalide\"\u001b[39m\nReceived string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Montant invalide\"\u001b[39m\nReceived string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:260:28)"],"fullName":"E2E Liquidity - PENGU Concentrated Validation des paramètres devrait valider les paramètres de position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145577442,"status":"failed","title":"devrait valider les paramètres de position"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Résumé des diagnostics"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:303:35)"],"fullName":"E2E Liquidity - PENGU Concentrated Résumé des diagnostics devrait afficher un résumé JSON des résultats de liquidité","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758145577446,"status":"failed","title":"devrait afficher un résumé JSON des résultats de liquidité"}],"endTime":1758145577481,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Création de position de liquidité › devrait créer une position USDC/PENGU avec succès\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 115 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m       \u001b[90m// Vérifications\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 117 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m       expect(result\u001b[33m.\u001b[39mpositionId)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 119 |\u001b[39m       expect(result\u001b[33m.\u001b[39msignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m       expect(result\u001b[33m.\u001b[39mticks)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:117:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Création de position de liquidité › devrait gérer les erreurs de solde insuffisant\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\n    Received string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 156 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 158 |\u001b[39m       expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Solde insuffisant'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 159 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 160 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion solde insuffisant confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 161 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:158:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Gestion des erreurs réseau › devrait gérer les erreurs de réseau avec retry\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 225 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'Résultat position avec retry:'\u001b[39m\u001b[33m,\u001b[39m result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 226 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 227 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 228 |\u001b[39m       expect(mockConnection\u001b[33m.\u001b[39msendRawTransaction)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 229 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion erreur réseau avec retry confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:227:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Validation des paramètres › devrait valider les paramètres de position\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Montant invalide\"\u001b[39m\n    Received string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 258 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 259 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 260 |\u001b[39m       expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Montant invalide'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 261 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 262 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Validation paramètres confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 263 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:260:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Résumé des diagnostics › devrait afficher un résumé JSON des résultats de liquidité\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 301 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'📊 Diagnostics liquidité:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(diagnostics\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 302 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 303 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 304 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39mpositionId)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 305 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39msignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 306 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39mticks)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:303:35)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts","startTime":1758145577148,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de réussite CCTP"],"duration":11,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de réussite CCTP devrait exécuter un bridge USDC ETH → USDC SPL avec CCTP et frais < 3%","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758145577782,"status":"passed","title":"devrait exécuter un bridge USDC ETH → USDC SPL avec CCTP et frais < 3%"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de fallback non-CCTP"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de fallback non-CCTP devrait utiliser une route non-CCTP si CCTP indisponible","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145577795,"status":"passed","title":"devrait utiliser une route non-CCTP si CCTP indisponible"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de frais trop élevés"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de frais trop élevés devrait rejeter une quote avec des frais > 3%","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145577802,"status":"passed","title":"devrait rejeter une quote avec des frais > 3%"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas d'erreur ethers mock"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas d'erreur ethers mock devrait gérer l'erreur \"evmWallet.signTransaction is not a function\"","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145577816,"status":"passed","title":"devrait gérer l'erreur \"evmWallet.signTransaction is not a function\""},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Résumé des diagnostics"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Résumé des diagnostics devrait afficher un résumé JSON des résultats","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145577823,"status":"passed","title":"devrait afficher un résumé JSON des résultats"}],"endTime":1758145577832,"message":"","name":"C:\\b.pengu\\tests\\e2e\\bridge.abs.test.ts","startTime":1758145577509,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":1052,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 1 - Détection de solde bas et déclenchement de retrait","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145578155,"status":"passed","title":"Test 1 - Détection de solde bas et déclenchement de retrait"},{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":2021,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 2 - Agrégation des alertes sans spam","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145579211,"status":"passed","title":"Test 2 - Agrégation des alertes sans spam"},{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":2020,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 3 - Gestion des erreurs de monitoring","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145581233,"status":"passed","title":"Test 3 - Gestion des erreurs de monitoring"}],"endTime":1758145583256,"message":"","name":"C:\\b.pengu\\tests\\e2e\\monitor.test.ts","startTime":1758145577878,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot","Chaîne complète sur 5 wallets"],"duration":35,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot Chaîne complète sur 5 wallets devrait exécuter la chaîne complète : retrait → bridge → swap → liquidité","invocations":1,"location":null,"numPassingAsserts":46,"retryReasons":[],"startAt":1758145583704,"status":"passed","title":"devrait exécuter la chaîne complète : retrait → bridge → swap → liquidité"},{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot","Test de performance sur 100 wallets"],"duration":9060,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot Test de performance sur 100 wallets devrait gérer 100 wallets avec monitoring des performances","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145583740,"status":"passed","title":"devrait gérer 100 wallets avec monitoring des performances"},{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot","Vérification des soldes finaux"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot Vérification des soldes finaux devrait vérifier que les soldes finaux correspondent aux attentes","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758145592801,"status":"passed","title":"devrait vérifier que les soldes finaux correspondent aux attentes"},{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot","Test de stabilité et gestion d'erreurs"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot Test de stabilité et gestion d'erreurs devrait gérer les erreurs et continuer le traitement","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1758145592809,"status":"passed","title":"devrait gérer les erreurs et continuer le traitement"}],"endTime":1758145592831,"message":"","name":"C:\\b.pengu\\tests\\e2e.test.ts","startTime":1758145583295,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 1 - Happy path (1 wallet)","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758145594115,"status":"passed","title":"Test 1 - Happy path (1 wallet)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 2 - Fallback CEX (Bybit → Binance)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145594126,"status":"passed","title":"Test 2 - Fallback CEX (Bybit → Binance)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 3 - Résilience (retry Li.Fi, slippage Jupiter)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145594129,"status":"passed","title":"Test 3 - Résilience (retry Li.Fi, slippage Jupiter)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":23,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 4 - Performance mini (5 wallets)","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145594135,"status":"passed","title":"Test 4 - Performance mini (5 wallets)"}],"endTime":1758145594163,"message":"","name":"C:\\b.pengu\\tests\\e2e\\flow.test.ts","startTime":1758145592907,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation complète de retrait et vérification de solde"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation complète de retrait et vérification de solde devrait simuler un retrait Bybit et vérifier l'augmentation du solde","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1758145595094,"status":"passed","title":"devrait simuler un retrait Bybit et vérifier l'augmentation du solde"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation complète de retrait et vérification de solde"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation complète de retrait et vérification de solde devrait simuler un fallback Binance et vérifier le processus complet","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758145595103,"status":"passed","title":"devrait simuler un fallback Binance et vérifier le processus complet"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation complète de retrait et vérification de solde"],"duration":4759,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation complète de retrait et vérification de solde devrait simuler un batch de retraits et vérifier les statistiques","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758145595107,"status":"passed","title":"devrait simuler un batch de retraits et vérifier les statistiques"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation complète de retrait et vérification de solde"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation complète de retrait et vérification de solde devrait gérer les erreurs de réseau et les timeouts","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145599868,"status":"passed","title":"devrait gérer les erreurs de réseau et les timeouts"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation complète de retrait et vérification de solde"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation complète de retrait et vérification de solde devrait vérifier les balances des exchanges avant de recommander","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758145599871,"status":"passed","title":"devrait vérifier les balances des exchanges avant de recommander"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation de scénarios d'erreur"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation de scénarios d'erreur devrait gérer le cas où tous les exchanges échouent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145599873,"status":"passed","title":"devrait gérer le cas où tous les exchanges échouent"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation de scénarios d'erreur"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation de scénarios d'erreur devrait gérer les retraits avec des montants invalides","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145599878,"status":"passed","title":"devrait gérer les retraits avec des montants invalides"}],"endTime":1758145599884,"message":"","name":"C:\\b.pengu\\tests\\exchanges.integration.test.ts","startTime":1758145594237,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":1028,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 1 - Détection de solde bas et déclenchement de retrait","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145600177,"status":"passed","title":"Test 1 - Détection de solde bas et déclenchement de retrait"},{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":2024,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 2 - Agrégation des alertes sans spam","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145601208,"status":"passed","title":"Test 2 - Agrégation des alertes sans spam"},{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":2020,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 3 - Gestion des erreurs de monitoring","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145603234,"status":"passed","title":"Test 3 - Gestion des erreurs de monitoring"}],"endTime":1758145605261,"message":"","name":"C:\\b.pengu\\tests\\e2e\\monitor.test.ts","startTime":1758145599911,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ExchangeManager","withdrawRandom"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager withdrawRandom devrait sélectionner un wallet aléatoire et effectuer un retrait Bybit","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758145606511,"status":"passed","title":"devrait sélectionner un wallet aléatoire et effectuer un retrait Bybit"},{"ancestorTitles":["ExchangeManager","withdrawRandom"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager withdrawRandom devrait fallback vers Binance si Bybit échoue","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145606524,"status":"passed","title":"devrait fallback vers Binance si Bybit échoue"},{"ancestorTitles":["ExchangeManager","withdrawRandom"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager withdrawRandom devrait échouer si les deux exchanges ont des balances insuffisantes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145606531,"status":"passed","title":"devrait échouer si les deux exchanges ont des balances insuffisantes"},{"ancestorTitles":["ExchangeManager","withdrawRandom"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager withdrawRandom devrait gérer les erreurs de réseau","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145606534,"status":"passed","title":"devrait gérer les erreurs de réseau"},{"ancestorTitles":["ExchangeManager","withdrawRandomBatch"],"duration":2699,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager withdrawRandomBatch devrait effectuer des retraits en batch sur plusieurs wallets","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145606540,"status":"passed","title":"devrait effectuer des retraits en batch sur plusieurs wallets"},{"ancestorTitles":["ExchangeManager","checkExchangeBalances"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager checkExchangeBalances devrait recommander Bybit si seul Bybit a une balance suffisante","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145609241,"status":"passed","title":"devrait recommander Bybit si seul Bybit a une balance suffisante"},{"ancestorTitles":["ExchangeManager","checkExchangeBalances"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager checkExchangeBalances devrait recommander les deux si les deux ont des balances suffisantes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145609248,"status":"passed","title":"devrait recommander les deux si les deux ont des balances suffisantes"},{"ancestorTitles":["ExchangeManager","checkConnectivity"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager checkConnectivity devrait vérifier la connectivité des deux exchanges","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145609252,"status":"passed","title":"devrait vérifier la connectivité des deux exchanges"},{"ancestorTitles":["ExchangeManager","checkConnectivity"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager checkConnectivity devrait détecter les problèmes de connectivité","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145609258,"status":"passed","title":"devrait détecter les problèmes de connectivité"}],"endTime":1758145609266,"message":"","name":"C:\\b.pengu\\tests\\exchanges.test.ts","startTime":1758145605294,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Bybit Exchange - Tests de connectivité"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Bybit Exchange - Tests de connectivité devrait gérer les réponses 200 avec succès","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145610516,"status":"passed","title":"devrait gérer les réponses 200 avec succès"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Bybit Exchange - Tests de connectivité"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Bybit Exchange - Tests de connectivité devrait gérer les erreurs 4XX avec fallback Binance","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145610524,"status":"passed","title":"devrait gérer les erreurs 4XX avec fallback Binance"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Bybit Exchange - Tests de connectivité"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Bybit Exchange - Tests de connectivité devrait gérer les rate limits avec retry","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145610528,"status":"passed","title":"devrait gérer les rate limits avec retry"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Li.Fi Bridge - Tests de connectivité"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Li.Fi Bridge - Tests de connectivité devrait gérer les routes CCTP avec succès","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145610532,"status":"passed","title":"devrait gérer les routes CCTP avec succès"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Li.Fi Bridge - Tests de connectivité"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Li.Fi Bridge - Tests de connectivité devrait gérer les routes Mayan avec latences variables","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145610543,"status":"passed","title":"devrait gérer les routes Mayan avec latences variables"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Jupiter Trading - Tests de connectivité"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Jupiter Trading - Tests de connectivité devrait gérer les quotes avec le mint PENGU","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145610546,"status":"passed","title":"devrait gérer les quotes avec le mint PENGU"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Jupiter Trading - Tests de connectivité"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Jupiter Trading - Tests de connectivité devrait gérer les swaps asLegacyTransaction","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145610550,"status":"passed","title":"devrait gérer les swaps asLegacyTransaction"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Orca Liquidity - Tests de connectivité"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Orca Liquidity - Tests de connectivité devrait gérer les erreurs \"insufficient balance\"","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145610553,"status":"passed","title":"devrait gérer les erreurs \"insufficient balance\""},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Tests de résilience globale"],"duration":231,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Tests de résilience globale devrait gérer les erreurs réseau avec retry","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145610556,"status":"passed","title":"devrait gérer les erreurs réseau avec retry"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Tests de résilience globale"],"duration":1516,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Tests de résilience globale devrait gérer les timeouts avec backoff exponentiel","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145610788,"status":"passed","title":"devrait gérer les timeouts avec backoff exponentiel"}],"endTime":1758145612310,"message":"","name":"C:\\b.pengu\\tests\\smoke.test.ts","startTime":1758145609324,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["WalletManager"],"duration":165,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait initialiser le bon nombre de wallets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145613332,"status":"passed","title":"devrait initialiser le bon nombre de wallets"},{"ancestorTitles":["WalletManager"],"duration":123,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait dériver des wallets avec des adresses valides","invocations":1,"location":null,"numPassingAsserts":35,"retryReasons":[],"startAt":1758145613501,"status":"passed","title":"devrait dériver des wallets avec des adresses valides"},{"ancestorTitles":["WalletManager"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait récupérer un wallet par index","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145613627,"status":"passed","title":"devrait récupérer un wallet par index"},{"ancestorTitles":["WalletManager"],"duration":221,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait retourner undefined pour un index invalide","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145613738,"status":"passed","title":"devrait retourner undefined pour un index invalide"},{"ancestorTitles":["WalletManager"],"duration":183,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait récupérer un wallet aléatoire","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145613960,"status":"passed","title":"devrait récupérer un wallet aléatoire"},{"ancestorTitles":["WalletManager"],"duration":195,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait avoir des adresses différentes pour chaque wallet","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145614145,"status":"passed","title":"devrait avoir des adresses différentes pour chaque wallet"},{"ancestorTitles":["WalletManager"],"duration":183,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait avoir des adresses EVM différentes pour chaque wallet","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145614342,"status":"passed","title":"devrait avoir des adresses EVM différentes pour chaque wallet"}],"endTime":1758145614528,"message":"","name":"C:\\b.pengu\\tests\\wallets.test.ts","startTime":1758145612343,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 1 - Happy path (1 wallet)","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758145615350,"status":"passed","title":"Test 1 - Happy path (1 wallet)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 2 - Fallback CEX (Bybit → Binance)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145615366,"status":"passed","title":"Test 2 - Fallback CEX (Bybit → Binance)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 3 - Résilience (retry Li.Fi, slippage Jupiter)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145615371,"status":"passed","title":"Test 3 - Résilience (retry Li.Fi, slippage Jupiter)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 4 - Performance mini (5 wallets)","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145615375,"status":"passed","title":"Test 4 - Performance mini (5 wallets)"}],"endTime":1758145615383,"message":"","name":"C:\\b.pengu\\tests\\e2e\\flow.test.ts","startTime":1758145614558,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot (Version Simple)","Test de base - Chaîne complète sur 1 wallet"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot (Version Simple) Test de base - Chaîne complète sur 1 wallet devrait exécuter la chaîne complète : retrait → bridge → swap → liquidité","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1758145616113,"status":"passed","title":"devrait exécuter la chaîne complète : retrait → bridge → swap → liquidité"},{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot (Version Simple)","Test de performance - 5 wallets en parallèle"],"duration":21,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot (Version Simple) Test de performance - 5 wallets en parallèle devrait traiter 5 wallets en parallèle avec succès","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758145616128,"status":"passed","title":"devrait traiter 5 wallets en parallèle avec succès"}],"endTime":1758145616151,"message":"","name":"C:\\b.pengu\\tests\\e2e.simple.test.ts","startTime":1758145615416,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["BridgeManager","bridgeFunds"],"duration":20,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager bridgeFunds devrait réussir un bridge BSC vers Solana","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145616405,"status":"passed","title":"devrait réussir un bridge BSC vers Solana"},{"ancestorTitles":["BridgeManager","bridgeFunds"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager bridgeFunds devrait gérer les frais trop élevés","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145616427,"status":"passed","title":"devrait gérer les frais trop élevés"},{"ancestorTitles":["BridgeManager","bridgeFunds"],"duration":24,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager bridgeFunds devrait gérer les erreurs de réseau avec retry","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145616436,"status":"passed","title":"devrait gérer les erreurs de réseau avec retry"},{"ancestorTitles":["BridgeManager","bridgeFunds"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager bridgeFunds devrait gérer les chaînes supportées","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145616462,"status":"passed","title":"devrait gérer les chaînes supportées"},{"ancestorTitles":["BridgeManager","getBridgeQuote"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager getBridgeQuote devrait récupérer un devis de bridge valide","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145616471,"status":"passed","title":"devrait récupérer un devis de bridge valide"},{"ancestorTitles":["BridgeManager","getBridgeQuote"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager getBridgeQuote devrait retourner null si aucun devis disponible","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145616475,"status":"passed","title":"devrait retourner null si aucun devis disponible"},{"ancestorTitles":["BridgeManager","getBridgeQuote"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager getBridgeQuote devrait gérer les erreurs d'API","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145616480,"status":"passed","title":"devrait gérer les erreurs d'API"},{"ancestorTitles":["BridgeManager","checkConnectivity"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager checkConnectivity devrait vérifier la connectivité de l'API Li.Fi","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145616484,"status":"passed","title":"devrait vérifier la connectivité de l'API Li.Fi"},{"ancestorTitles":["BridgeManager","checkConnectivity"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager checkConnectivity devrait détecter les problèmes de connectivité","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145616488,"status":"passed","title":"devrait détecter les problèmes de connectivité"}],"endTime":1758145616500,"message":"","name":"C:\\b.pengu\\tests\\bridge.test.ts","startTime":1758145616218,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MonitorManager","start"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager start devrait démarrer le monitoring","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145616730,"status":"passed","title":"devrait démarrer le monitoring"},{"ancestorTitles":["MonitorManager","start"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager start devrait ne pas redémarrer si déjà en cours","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145616746,"status":"passed","title":"devrait ne pas redémarrer si déjà en cours"},{"ancestorTitles":["MonitorManager","stop"],"duration":12,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager stop devrait arrêter le monitoring","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145616754,"status":"passed","title":"devrait arrêter le monitoring"},{"ancestorTitles":["MonitorManager","getMetrics"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager getMetrics devrait récupérer les métriques de monitoring","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758145616767,"status":"passed","title":"devrait récupérer les métriques de monitoring"},{"ancestorTitles":["MonitorManager","getMetrics"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager getMetrics devrait gérer les erreurs lors de la récupération des métriques","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145616771,"status":"passed","title":"devrait gérer les erreurs lors de la récupération des métriques"},{"ancestorTitles":["MonitorManager","sendAlert"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager sendAlert devrait envoyer une alerte","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145616774,"status":"passed","title":"devrait envoyer une alerte"},{"ancestorTitles":["MonitorManager","sendAlert"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager sendAlert devrait éviter le spam d'alertes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145616776,"status":"passed","title":"devrait éviter le spam d'alertes"},{"ancestorTitles":["MonitorManager","handleError"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager handleError devrait gérer les erreurs avec compteur","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145616779,"status":"passed","title":"devrait gérer les erreurs avec compteur"},{"ancestorTitles":["MonitorManager","checkSystemHealth"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager checkSystemHealth devrait vérifier la santé du système","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758145616782,"status":"passed","title":"devrait vérifier la santé du système"},{"ancestorTitles":["MonitorManager","checkSystemHealth"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager checkSystemHealth devrait alerter en cas de problème de connectivité","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145616788,"status":"passed","title":"devrait alerter en cas de problème de connectivité"},{"ancestorTitles":["MonitorManager","monitorPerformance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager monitorPerformance devrait surveiller les performances","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145616792,"status":"passed","title":"devrait surveiller les performances"},{"ancestorTitles":["MonitorManager","monitorRisks"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager monitorRisks devrait surveiller les risques","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145616794,"status":"passed","title":"devrait surveiller les risques"},{"ancestorTitles":["MonitorManager","getBotState"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager getBotState devrait retourner l'état du bot","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145616795,"status":"passed","title":"devrait retourner l'état du bot"}],"endTime":1758145616800,"message":"","name":"C:\\b.pengu\\tests\\monitor.test.ts","startTime":1758145616556,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de réussite CCTP"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de réussite CCTP devrait exécuter un bridge USDC ETH → USDC SPL avec CCTP et frais < 3%","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758145617120,"status":"passed","title":"devrait exécuter un bridge USDC ETH → USDC SPL avec CCTP et frais < 3%"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de fallback non-CCTP"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de fallback non-CCTP devrait utiliser une route non-CCTP si CCTP indisponible","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145617128,"status":"passed","title":"devrait utiliser une route non-CCTP si CCTP indisponible"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de frais trop élevés"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de frais trop élevés devrait rejeter une quote avec des frais > 3%","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145617134,"status":"passed","title":"devrait rejeter une quote avec des frais > 3%"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas d'erreur ethers mock"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas d'erreur ethers mock devrait gérer l'erreur \"evmWallet.signTransaction is not a function\"","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617149,"status":"passed","title":"devrait gérer l'erreur \"evmWallet.signTransaction is not a function\""},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Résumé des diagnostics"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Résumé des diagnostics devrait afficher un résumé JSON des résultats","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145617155,"status":"passed","title":"devrait afficher un résumé JSON des résultats"}],"endTime":1758145617161,"message":"","name":"C:\\b.pengu\\tests\\e2e\\bridge.abs.test.ts","startTime":1758145616821,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Monitoring continu"],"duration":118,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Monitoring continu devrait surveiller les soldes en continu et déclencher des alertes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617378,"status":"passed","title":"devrait surveiller les soldes en continu et déclencher des alertes"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Monitoring continu"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Monitoring continu devrait détecter les soldes faibles et déclencher des recharges","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617499,"status":"passed","title":"devrait détecter les soldes faibles et déclencher des recharges"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Métriques de performance"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Métriques de performance devrait collecter et analyser les métriques de performance","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758145617505,"status":"passed","title":"devrait collecter et analyser les métriques de performance"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Métriques de performance"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Métriques de performance devrait détecter les problèmes de performance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617512,"status":"passed","title":"devrait détecter les problèmes de performance"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Gestion des alertes"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Gestion des alertes devrait prévenir le spam d'alertes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145617519,"status":"passed","title":"devrait prévenir le spam d'alertes"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Surveillance des risques"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Surveillance des risques devrait détecter les risques élevés","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617526,"status":"passed","title":"devrait détecter les risques élevés"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Tests de résilience du monitoring"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Tests de résilience du monitoring devrait continuer à fonctionner malgré les erreurs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617533,"status":"passed","title":"devrait continuer à fonctionner malgré les erreurs"}],"endTime":1758145617552,"message":"","name":"C:\\b.pengu\\tests\\monitoring.e2e.test.ts","startTime":1758145617212,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["LiquidityManager","openPosition"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPosition devrait ouvrir une position de liquidité concentrée","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145617750,"status":"passed","title":"devrait ouvrir une position de liquidité concentrée"},{"ancestorTitles":["LiquidityManager","openPosition"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPosition devrait échouer si le solde USDC est insuffisant","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145617754,"status":"passed","title":"devrait échouer si le solde USDC est insuffisant"},{"ancestorTitles":["LiquidityManager","openPosition"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPosition devrait échouer si les ticks sont invalides","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145617758,"status":"passed","title":"devrait échouer si les ticks sont invalides"},{"ancestorTitles":["LiquidityManager","openPosition"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPosition devrait gérer l'allocation de capital","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145617760,"status":"passed","title":"devrait gérer l'allocation de capital"},{"ancestorTitles":["LiquidityManager","openPositionWithRange"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPositionWithRange devrait ouvrir une position avec plage de prix automatique","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758145617763,"status":"passed","title":"devrait ouvrir une position avec plage de prix automatique"},{"ancestorTitles":["LiquidityManager","openPositionWithRange"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPositionWithRange devrait échouer si le prix du pool ne peut pas être récupéré","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145617767,"status":"passed","title":"devrait échouer si le prix du pool ne peut pas être récupéré"},{"ancestorTitles":["LiquidityManager","calculateOptimalTicks"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager calculateOptimalTicks devrait calculer les ticks optimaux","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145617768,"status":"passed","title":"devrait calculer les ticks optimaux"},{"ancestorTitles":["LiquidityManager","calculateOptimalTicks"],"duration":20,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager calculateOptimalTicks devrait échouer si le pool n'existe pas","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617773,"status":"passed","title":"devrait échouer si le pool n'existe pas"},{"ancestorTitles":["LiquidityManager","validateTicks"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager validateTicks devrait valider des ticks corrects","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617794,"status":"passed","title":"devrait valider des ticks corrects"},{"ancestorTitles":["LiquidityManager","validateTicks"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager validateTicks devrait rejeter des ticks invalides (lower >= upper)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145617796,"status":"passed","title":"devrait rejeter des ticks invalides (lower >= upper)"},{"ancestorTitles":["LiquidityManager","validateTicks"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager validateTicks devrait rejeter des ticks avec une plage trop petite","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145617800,"status":"passed","title":"devrait rejeter des ticks avec une plage trop petite"},{"ancestorTitles":["LiquidityManager","priceToTick"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager priceToTick devrait convertir un prix en tick","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145617802,"status":"passed","title":"devrait convertir un prix en tick"},{"ancestorTitles":["LiquidityManager","getTokenBalance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager getTokenBalance devrait récupérer le solde d'un token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617805,"status":"passed","title":"devrait récupérer le solde d'un token"},{"ancestorTitles":["LiquidityManager","getTokenBalance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager getTokenBalance devrait retourner 0 si aucun compte de token trouvé","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617808,"status":"passed","title":"devrait retourner 0 si aucun compte de token trouvé"},{"ancestorTitles":["LiquidityManager","checkConnectivity"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager checkConnectivity devrait vérifier la connectivité","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617810,"status":"passed","title":"devrait vérifier la connectivité"},{"ancestorTitles":["LiquidityManager","checkConnectivity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager checkConnectivity devrait détecter les problèmes de connectivité","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617814,"status":"passed","title":"devrait détecter les problèmes de connectivité"}],"endTime":1758145617820,"message":"","name":"C:\\b.pengu\\tests\\liquidity.test.ts","startTime":1758145617583,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Imports Guard - Prévention des modules legacy"],"duration":36,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Imports Guard - Prévention des modules legacy ne devrait pas importer de modules legacy","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145617992,"status":"passed","title":"ne devrait pas importer de modules legacy"},{"ancestorTitles":["Imports Guard - Prévention des modules legacy"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Imports Guard - Prévention des modules legacy devrait maintenir la liste des modules interdits à jour","invocations":1,"location":null,"numPassingAsserts":19,"retryReasons":[],"startAt":1758145618030,"status":"passed","title":"devrait maintenir la liste des modules interdits à jour"}],"endTime":1758145618036,"message":"","name":"C:\\b.pengu\\tests\\meta\\imports.guard.test.ts","startTime":1758145617850,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["TradingManager","getSwapQuote"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager getSwapQuote devrait récupérer un devis de swap valide","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758145618226,"status":"passed","title":"devrait récupérer un devis de swap valide"},{"ancestorTitles":["TradingManager","getSwapQuote"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager getSwapQuote devrait retourner null si aucun devis disponible","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145618230,"status":"passed","title":"devrait retourner null si aucun devis disponible"},{"ancestorTitles":["TradingManager","getSwapQuote"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager getSwapQuote devrait gérer les erreurs d'API","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145618232,"status":"passed","title":"devrait gérer les erreurs d'API"},{"ancestorTitles":["TradingManager","swapUsdcToPengu"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager swapUsdcToPengu devrait effectuer un swap USDC vers PENGU avec succès","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758145618236,"status":"passed","title":"devrait effectuer un swap USDC vers PENGU avec succès"},{"ancestorTitles":["TradingManager","swapUsdcToPengu"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager swapUsdcToPengu devrait gérer les erreurs de swap","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145618239,"status":"passed","title":"devrait gérer les erreurs de swap"},{"ancestorTitles":["TradingManager","swapPenguToUsdc"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager swapPenguToUsdc devrait effectuer un swap PENGU vers USDC avec succès","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145618242,"status":"passed","title":"devrait effectuer un swap PENGU vers USDC avec succès"},{"ancestorTitles":["TradingManager","swapPenguToUsdc"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager swapPenguToUsdc devrait gérer les erreurs de swap","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145618246,"status":"passed","title":"devrait gérer les erreurs de swap"},{"ancestorTitles":["TradingManager","getTokenBalance"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager getTokenBalance devrait récupérer le solde d'un token","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145618250,"status":"passed","title":"devrait récupérer le solde d'un token"},{"ancestorTitles":["TradingManager","getTokenBalance"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager getTokenBalance devrait retourner 0 si aucun compte de token trouvé","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145618254,"status":"passed","title":"devrait retourner 0 si aucun compte de token trouvé"},{"ancestorTitles":["TradingManager","checkConnectivity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager checkConnectivity devrait vérifier la connectivité de l'API Jupiter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758145618258,"status":"passed","title":"devrait vérifier la connectivité de l'API Jupiter"},{"ancestorTitles":["TradingManager","checkConnectivity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager checkConnectivity devrait détecter les problèmes de connectivité","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758145618260,"status":"passed","title":"devrait détecter les problèmes de connectivité"}],"endTime":1758145618264,"message":"","name":"C:\\b.pengu\\tests\\trading.test.ts","startTime":1758145618060,"status":"passed","summary":""}],"wasInterrupted":false}
