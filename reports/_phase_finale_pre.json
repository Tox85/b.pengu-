{"numFailedTestSuites":6,"numFailedTests":18,"numPassedTestSuites":18,"numPassedTests":131,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":24,"numTotalTests":149,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1758146296229,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Flow complet Bridge → Trading → Liquidity"],"duration":70,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:301:36)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Flow complet Bridge → Trading → Liquidity devrait exécuter le flow complet avec succès","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146297304,"status":"failed","title":"devrait exécuter le flow complet avec succès"},{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Flow complet Bridge → Trading → Liquidity"],"duration":10,"failing":false,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:340:38)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Flow complet Bridge → Trading → Liquidity devrait gérer les erreurs et continuer le traitement","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146297388,"status":"failed","title":"devrait gérer les erreurs et continuer le traitement"},{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Résumé final JSON"],"duration":9,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:435:36)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Résumé final JSON devrait générer un résumé JSON complet","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146297400,"status":"failed","title":"devrait générer un résumé JSON complet"}],"endTime":1758146297457,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Flow complet Bridge → Trading → Liquidity › devrait exécuter le flow complet avec succès\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 299 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39mroute)\u001b[33m.\u001b[39mtoBe(\u001b[32m'cctp'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 300 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 301 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 302 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39mtxSignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 303 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39mactualSlippage)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 304 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:301:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Flow complet Bridge → Trading → Liquidity › devrait gérer les erreurs et continuer le traitement\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 338 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 339 |\u001b[39m       \u001b[90m// Le bridge échoue, mais on continue avec les autres étapes\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 340 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 341 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Bridge error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 342 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 343 |\u001b[39m       \u001b[90m// Étape 2: Swap (devrait réussir)\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:340:38)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Résumé final JSON › devrait générer un résumé JSON complet\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 433 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'📊 Résumé final complet:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(finalSummary\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 434 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 435 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 436 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 437 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 438 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mliquidity\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:435:36)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts","startTime":1758146296632,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait exécuter un swap 10 USDC → PENGU avec succès","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758146297838,"status":"passed","title":"devrait exécuter un swap 10 USDC → PENGU avec succès"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait gérer le slippage élevé correctement","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146297852,"status":"passed","title":"devrait gérer le slippage élevé correctement"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait gérer les erreurs de solde insuffisant","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146297858,"status":"passed","title":"devrait gérer les erreurs de solde insuffisant"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Gestion des erreurs réseau"],"duration":5,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\trading.pengu.test.ts:295:30)"],"fullName":"E2E Trading - PENGU via Jupiter Gestion des erreurs réseau devrait gérer les erreurs de réseau avec retry","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146297863,"status":"failed","title":"devrait gérer les erreurs de réseau avec retry"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Résumé des diagnostics"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Résumé des diagnostics devrait afficher un résumé JSON des résultats de trading","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146297888,"status":"passed","title":"devrait afficher un résumé JSON des résultats de trading"}],"endTime":1758146297906,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Trading - PENGU via Jupiter › Gestion des erreurs réseau › devrait gérer les erreurs de réseau avec retry\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 293 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'Résultat swap avec retry:'\u001b[39m\u001b[33m,\u001b[39m result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 294 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 295 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 296 |\u001b[39m       expect(mockJupiterApi\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Premier appel échoué, deuxième réussi\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 297 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 298 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion erreur réseau avec retry confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/trading.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:295:30)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\trading.pengu.test.ts","startTime":1758146297533,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":19,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:117:30)"],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait créer une position USDC/PENGU avec succès","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146298360,"status":"failed","title":"devrait créer une position USDC/PENGU avec succès"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\nReceived string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\nReceived string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:158:28)"],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait gérer les erreurs de solde insuffisant","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146298410,"status":"failed","title":"devrait gérer les erreurs de solde insuffisant"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait gérer les erreurs de pool invalide","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146298417,"status":"passed","title":"devrait gérer les erreurs de pool invalide"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Gestion des erreurs réseau"],"duration":7,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:227:30)"],"fullName":"E2E Liquidity - PENGU Concentrated Gestion des erreurs réseau devrait gérer les erreurs de réseau avec retry","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146298424,"status":"failed","title":"devrait gérer les erreurs de réseau avec retry"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Validation des paramètres"],"duration":7,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Montant invalide\"\u001b[39m\nReceived string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Montant invalide\"\u001b[39m\nReceived string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:260:28)"],"fullName":"E2E Liquidity - PENGU Concentrated Validation des paramètres devrait valider les paramètres de position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146298436,"status":"failed","title":"devrait valider les paramètres de position"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Résumé des diagnostics"],"duration":5,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:303:35)"],"fullName":"E2E Liquidity - PENGU Concentrated Résumé des diagnostics devrait afficher un résumé JSON des résultats de liquidité","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146298446,"status":"failed","title":"devrait afficher un résumé JSON des résultats de liquidité"}],"endTime":1758146298534,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Création de position de liquidité › devrait créer une position USDC/PENGU avec succès\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 115 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m       \u001b[90m// Vérifications\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 117 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m       expect(result\u001b[33m.\u001b[39mpositionId)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 119 |\u001b[39m       expect(result\u001b[33m.\u001b[39msignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m       expect(result\u001b[33m.\u001b[39mticks)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:117:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Création de position de liquidité › devrait gérer les erreurs de solde insuffisant\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\n    Received string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 156 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 158 |\u001b[39m       expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Solde insuffisant'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 159 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 160 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion solde insuffisant confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 161 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:158:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Gestion des erreurs réseau › devrait gérer les erreurs de réseau avec retry\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 225 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'Résultat position avec retry:'\u001b[39m\u001b[33m,\u001b[39m result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 226 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 227 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 228 |\u001b[39m       expect(mockConnection\u001b[33m.\u001b[39msendRawTransaction)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 229 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion erreur réseau avec retry confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:227:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Validation des paramètres › devrait valider les paramètres de position\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Montant invalide\"\u001b[39m\n    Received string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 258 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 259 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 260 |\u001b[39m       expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Montant invalide'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 261 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 262 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Validation paramètres confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 263 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:260:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Résumé des diagnostics › devrait afficher un résumé JSON des résultats de liquidité\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 301 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'📊 Diagnostics liquidité:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(diagnostics\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 302 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 303 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 304 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39mpositionId)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 305 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39msignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 306 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39mticks)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:303:35)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts","startTime":1758146297943,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait exécuter un swap 10 USDC → PENGU avec succès","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758146299406,"status":"passed","title":"devrait exécuter un swap 10 USDC → PENGU avec succès"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait gérer le slippage élevé correctement","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146299422,"status":"passed","title":"devrait gérer le slippage élevé correctement"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Swap USDC vers PENGU"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Swap USDC vers PENGU devrait gérer les erreurs de solde insuffisant","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146299428,"status":"passed","title":"devrait gérer les erreurs de solde insuffisant"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Gestion des erreurs réseau"],"duration":8,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\trading.pengu.test.ts:295:30)"],"fullName":"E2E Trading - PENGU via Jupiter Gestion des erreurs réseau devrait gérer les erreurs de réseau avec retry","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146299430,"status":"failed","title":"devrait gérer les erreurs de réseau avec retry"},{"ancestorTitles":["E2E Trading - PENGU via Jupiter","Résumé des diagnostics"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Trading - PENGU via Jupiter Résumé des diagnostics devrait afficher un résumé JSON des résultats de trading","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146299457,"status":"passed","title":"devrait afficher un résumé JSON des résultats de trading"}],"endTime":1758146299477,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Trading - PENGU via Jupiter › Gestion des erreurs réseau › devrait gérer les erreurs de réseau avec retry\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 293 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'Résultat swap avec retry:'\u001b[39m\u001b[33m,\u001b[39m result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 294 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 295 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 296 |\u001b[39m       expect(mockJupiterApi\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Premier appel échoué, deuxième réussi\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 297 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 298 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion erreur réseau avec retry confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/trading.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:295:30)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\trading.pengu.test.ts","startTime":1758146298612,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Flow complet Bridge → Trading → Liquidity"],"duration":19,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:301:36)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Flow complet Bridge → Trading → Liquidity devrait exécuter le flow complet avec succès","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146299922,"status":"failed","title":"devrait exécuter le flow complet avec succès"},{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Flow complet Bridge → Trading → Liquidity"],"duration":13,"failing":false,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:340:38)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Flow complet Bridge → Trading → Liquidity devrait gérer les erreurs et continuer le traitement","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146299958,"status":"failed","title":"devrait gérer les erreurs et continuer le traitement"},{"ancestorTitles":["E2E Flow - Bridge → Trading → Liquidity (Abstract)","Résumé final JSON"],"duration":7,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts:435:36)"],"fullName":"E2E Flow - Bridge → Trading → Liquidity (Abstract) Résumé final JSON devrait générer un résumé JSON complet","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146299973,"status":"failed","title":"devrait générer un résumé JSON complet"}],"endTime":1758146300018,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Flow complet Bridge → Trading → Liquidity › devrait exécuter le flow complet avec succès\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 299 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39mroute)\u001b[33m.\u001b[39mtoBe(\u001b[32m'cctp'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 300 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 301 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 302 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39mtxSignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 303 |\u001b[39m       expect(results\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39mactualSlippage)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 304 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:301:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Flow complet Bridge → Trading → Liquidity › devrait gérer les erreurs et continuer le traitement\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 338 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 339 |\u001b[39m       \u001b[90m// Le bridge échoue, mais on continue avec les autres étapes\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 340 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 341 |\u001b[39m       expect(results\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Bridge error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 342 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 343 |\u001b[39m       \u001b[90m// Étape 2: Swap (devrait réussir)\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:340:38)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Flow - Bridge → Trading → Liquidity (Abstract) › Résumé final JSON › devrait générer un résumé JSON complet\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 433 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'📊 Résumé final complet:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(finalSummary\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 434 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 435 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 436 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mbridge\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 437 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mswap\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 438 |\u001b[39m       expect(finalSummary\u001b[33m.\u001b[39mliquidity\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/flow.abs.test.ts\u001b[39m\u001b[0m\u001b[2m:435:36)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\flow.abs.test.ts","startTime":1758146299526,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":12,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:117:30)"],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait créer une position USDC/PENGU avec succès","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146300435,"status":"failed","title":"devrait créer une position USDC/PENGU avec succès"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":6,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\nReceived string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\nReceived string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:158:28)"],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait gérer les erreurs de solde insuffisant","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146300464,"status":"failed","title":"devrait gérer les erreurs de solde insuffisant"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Création de position de liquidité"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Liquidity - PENGU Concentrated Création de position de liquidité devrait gérer les erreurs de pool invalide","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146300471,"status":"passed","title":"devrait gérer les erreurs de pool invalide"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Gestion des erreurs réseau"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:227:30)"],"fullName":"E2E Liquidity - PENGU Concentrated Gestion des erreurs réseau devrait gérer les erreurs de réseau avec retry","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146300476,"status":"failed","title":"devrait gérer les erreurs de réseau avec retry"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Validation des paramètres"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Montant invalide\"\u001b[39m\nReceived string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Montant invalide\"\u001b[39m\nReceived string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:260:28)"],"fullName":"E2E Liquidity - PENGU Concentrated Validation des paramètres devrait valider les paramètres de position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146300480,"status":"failed","title":"devrait valider les paramètres de position"},{"ancestorTitles":["E2E Liquidity - PENGU Concentrated","Résumé des diagnostics"],"duration":5,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts:303:35)"],"fullName":"E2E Liquidity - PENGU Concentrated Résumé des diagnostics devrait afficher un résumé JSON des résultats de liquidité","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1758146300485,"status":"failed","title":"devrait afficher un résumé JSON des résultats de liquidité"}],"endTime":1758146300534,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Création de position de liquidité › devrait créer une position USDC/PENGU avec succès\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 115 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m       \u001b[90m// Vérifications\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 117 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m       expect(result\u001b[33m.\u001b[39mpositionId)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 119 |\u001b[39m       expect(result\u001b[33m.\u001b[39msignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m       expect(result\u001b[33m.\u001b[39mticks)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:117:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Création de position de liquidité › devrait gérer les erreurs de solde insuffisant\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Solde insuffisant\"\u001b[39m\n    Received string:    \u001b[31m\"Solde USDC insuffisant: 5 < 25\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 156 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 158 |\u001b[39m       expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Solde insuffisant'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 159 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 160 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion solde insuffisant confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 161 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:158:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Gestion des erreurs réseau › devrait gérer les erreurs de réseau avec retry\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 225 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'Résultat position avec retry:'\u001b[39m\u001b[33m,\u001b[39m result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 226 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 227 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 228 |\u001b[39m       expect(mockConnection\u001b[33m.\u001b[39msendRawTransaction)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 229 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Gestion erreur réseau avec retry confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:227:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Validation des paramètres › devrait valider les paramètres de position\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Montant invalide\"\u001b[39m\n    Received string:    \u001b[31m\"this.connection.sendTransaction is not a function\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 258 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 259 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 260 |\u001b[39m       expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Montant invalide'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 261 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 262 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✅ Validation paramètres confirmée !'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 263 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:260:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mE2E Liquidity - PENGU Concentrated › Résumé des diagnostics › devrait afficher un résumé JSON des résultats de liquidité\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 301 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'📊 Diagnostics liquidité:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(diagnostics\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 302 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 303 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 304 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39mpositionId)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 305 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39msignature)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 306 |\u001b[39m       expect(diagnostics\u001b[33m.\u001b[39mticks)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/e2e/liquidity.pengu.test.ts\u001b[39m\u001b[0m\u001b[2m:303:35)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\b.pengu\\tests\\e2e\\liquidity.pengu.test.ts","startTime":1758146300075,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de réussite CCTP"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de réussite CCTP devrait exécuter un bridge USDC ETH → USDC SPL avec CCTP et frais < 3%","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758146300988,"status":"passed","title":"devrait exécuter un bridge USDC ETH → USDC SPL avec CCTP et frais < 3%"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de fallback non-CCTP"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de fallback non-CCTP devrait utiliser une route non-CCTP si CCTP indisponible","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146301006,"status":"passed","title":"devrait utiliser une route non-CCTP si CCTP indisponible"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de frais trop élevés"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de frais trop élevés devrait rejeter une quote avec des frais > 3%","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146301020,"status":"passed","title":"devrait rejeter une quote avec des frais > 3%"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas d'erreur ethers mock"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas d'erreur ethers mock devrait gérer l'erreur \"evmWallet.signTransaction is not a function\"","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146301030,"status":"passed","title":"devrait gérer l'erreur \"evmWallet.signTransaction is not a function\""},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Résumé des diagnostics"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Résumé des diagnostics devrait afficher un résumé JSON des résultats","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146301046,"status":"passed","title":"devrait afficher un résumé JSON des résultats"}],"endTime":1758146301059,"message":"","name":"C:\\b.pengu\\tests\\e2e\\bridge.abs.test.ts","startTime":1758146300583,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":1052,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 1 - Détection de solde bas et déclenchement de retrait","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146301328,"status":"passed","title":"Test 1 - Détection de solde bas et déclenchement de retrait"},{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":2020,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 2 - Agrégation des alertes sans spam","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146302381,"status":"passed","title":"Test 2 - Agrégation des alertes sans spam"},{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":2020,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 3 - Gestion des erreurs de monitoring","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146304402,"status":"passed","title":"Test 3 - Gestion des erreurs de monitoring"}],"endTime":1758146306427,"message":"","name":"C:\\b.pengu\\tests\\e2e\\monitor.test.ts","startTime":1758146301116,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot","Chaîne complète sur 5 wallets"],"duration":40,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot Chaîne complète sur 5 wallets devrait exécuter la chaîne complète : retrait → bridge → swap → liquidité","invocations":1,"location":null,"numPassingAsserts":46,"retryReasons":[],"startAt":1758146306638,"status":"passed","title":"devrait exécuter la chaîne complète : retrait → bridge → swap → liquidité"},{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot","Test de performance sur 100 wallets"],"duration":9108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot Test de performance sur 100 wallets devrait gérer 100 wallets avec monitoring des performances","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146306680,"status":"passed","title":"devrait gérer 100 wallets avec monitoring des performances"},{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot","Vérification des soldes finaux"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot Vérification des soldes finaux devrait vérifier que les soldes finaux correspondent aux attentes","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758146315789,"status":"passed","title":"devrait vérifier que les soldes finaux correspondent aux attentes"},{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot","Test de stabilité et gestion d'erreurs"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot Test de stabilité et gestion d'erreurs devrait gérer les erreurs et continuer le traitement","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1758146315798,"status":"passed","title":"devrait gérer les erreurs et continuer le traitement"}],"endTime":1758146315820,"message":"","name":"C:\\b.pengu\\tests\\e2e.test.ts","startTime":1758146306468,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 1 - Happy path (1 wallet)","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758146317299,"status":"passed","title":"Test 1 - Happy path (1 wallet)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 2 - Fallback CEX (Bybit → Binance)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146317316,"status":"passed","title":"Test 2 - Fallback CEX (Bybit → Binance)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 3 - Résilience (retry Li.Fi, slippage Jupiter)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146317320,"status":"passed","title":"Test 3 - Résilience (retry Li.Fi, slippage Jupiter)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 4 - Performance mini (5 wallets)","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146317324,"status":"passed","title":"Test 4 - Performance mini (5 wallets)"}],"endTime":1758146317336,"message":"","name":"C:\\b.pengu\\tests\\e2e\\flow.test.ts","startTime":1758146315920,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation complète de retrait et vérification de solde"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation complète de retrait et vérification de solde devrait simuler un retrait Bybit et vérifier l'augmentation du solde","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1758146318103,"status":"passed","title":"devrait simuler un retrait Bybit et vérifier l'augmentation du solde"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation complète de retrait et vérification de solde"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation complète de retrait et vérification de solde devrait simuler un fallback Binance et vérifier le processus complet","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758146318109,"status":"passed","title":"devrait simuler un fallback Binance et vérifier le processus complet"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation complète de retrait et vérification de solde"],"duration":3099,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation complète de retrait et vérification de solde devrait simuler un batch de retraits et vérifier les statistiques","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758146318112,"status":"passed","title":"devrait simuler un batch de retraits et vérifier les statistiques"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation complète de retrait et vérification de solde"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation complète de retrait et vérification de solde devrait gérer les erreurs de réseau et les timeouts","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146321213,"status":"passed","title":"devrait gérer les erreurs de réseau et les timeouts"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation complète de retrait et vérification de solde"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation complète de retrait et vérification de solde devrait vérifier les balances des exchanges avant de recommander","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758146321219,"status":"passed","title":"devrait vérifier les balances des exchanges avant de recommander"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation de scénarios d'erreur"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation de scénarios d'erreur devrait gérer le cas où tous les exchanges échouent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146321227,"status":"passed","title":"devrait gérer le cas où tous les exchanges échouent"},{"ancestorTitles":["ExchangeManager - Tests d'intégration","Simulation de scénarios d'erreur"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager - Tests d'intégration Simulation de scénarios d'erreur devrait gérer les retraits avec des montants invalides","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146321235,"status":"passed","title":"devrait gérer les retraits avec des montants invalides"}],"endTime":1758146321249,"message":"","name":"C:\\b.pengu\\tests\\exchanges.integration.test.ts","startTime":1758146317389,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":1038,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 1 - Détection de solde bas et déclenchement de retrait","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146321453,"status":"passed","title":"Test 1 - Détection de solde bas et déclenchement de retrait"},{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":2026,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 2 - Agrégation des alertes sans spam","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146322493,"status":"passed","title":"Test 2 - Agrégation des alertes sans spam"},{"ancestorTitles":["E2E Monitor - PENGU Bot (100% simulé)"],"duration":2025,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Monitor - PENGU Bot (100% simulé) Test 3 - Gestion des erreurs de monitoring","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146324520,"status":"passed","title":"Test 3 - Gestion des erreurs de monitoring"}],"endTime":1758146326547,"message":"","name":"C:\\b.pengu\\tests\\e2e\\monitor.test.ts","startTime":1758146321282,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ExchangeManager","withdrawRandom"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager withdrawRandom devrait sélectionner un wallet aléatoire et effectuer un retrait Bybit","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758146327246,"status":"passed","title":"devrait sélectionner un wallet aléatoire et effectuer un retrait Bybit"},{"ancestorTitles":["ExchangeManager","withdrawRandom"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager withdrawRandom devrait fallback vers Binance si Bybit échoue","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146327253,"status":"passed","title":"devrait fallback vers Binance si Bybit échoue"},{"ancestorTitles":["ExchangeManager","withdrawRandom"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager withdrawRandom devrait échouer si les deux exchanges ont des balances insuffisantes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146327255,"status":"passed","title":"devrait échouer si les deux exchanges ont des balances insuffisantes"},{"ancestorTitles":["ExchangeManager","withdrawRandom"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager withdrawRandom devrait gérer les erreurs de réseau","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146327258,"status":"passed","title":"devrait gérer les erreurs de réseau"},{"ancestorTitles":["ExchangeManager","withdrawRandomBatch"],"duration":4287,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager withdrawRandomBatch devrait effectuer des retraits en batch sur plusieurs wallets","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146327261,"status":"passed","title":"devrait effectuer des retraits en batch sur plusieurs wallets"},{"ancestorTitles":["ExchangeManager","checkExchangeBalances"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager checkExchangeBalances devrait recommander Bybit si seul Bybit a une balance suffisante","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146331551,"status":"passed","title":"devrait recommander Bybit si seul Bybit a une balance suffisante"},{"ancestorTitles":["ExchangeManager","checkExchangeBalances"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager checkExchangeBalances devrait recommander les deux si les deux ont des balances suffisantes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146331554,"status":"passed","title":"devrait recommander les deux si les deux ont des balances suffisantes"},{"ancestorTitles":["ExchangeManager","checkConnectivity"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager checkConnectivity devrait vérifier la connectivité des deux exchanges","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146331557,"status":"passed","title":"devrait vérifier la connectivité des deux exchanges"},{"ancestorTitles":["ExchangeManager","checkConnectivity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExchangeManager checkConnectivity devrait détecter les problèmes de connectivité","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146331560,"status":"passed","title":"devrait détecter les problèmes de connectivité"}],"endTime":1758146331566,"message":"","name":"C:\\b.pengu\\tests\\exchanges.test.ts","startTime":1758146326579,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Bybit Exchange - Tests de connectivité"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Bybit Exchange - Tests de connectivité devrait gérer les réponses 200 avec succès","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146332222,"status":"passed","title":"devrait gérer les réponses 200 avec succès"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Bybit Exchange - Tests de connectivité"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Bybit Exchange - Tests de connectivité devrait gérer les erreurs 4XX avec fallback Binance","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146332228,"status":"passed","title":"devrait gérer les erreurs 4XX avec fallback Binance"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Bybit Exchange - Tests de connectivité"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Bybit Exchange - Tests de connectivité devrait gérer les rate limits avec retry","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146332232,"status":"passed","title":"devrait gérer les rate limits avec retry"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Li.Fi Bridge - Tests de connectivité"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Li.Fi Bridge - Tests de connectivité devrait gérer les routes CCTP avec succès","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146332234,"status":"passed","title":"devrait gérer les routes CCTP avec succès"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Li.Fi Bridge - Tests de connectivité"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Li.Fi Bridge - Tests de connectivité devrait gérer les routes Mayan avec latences variables","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146332244,"status":"passed","title":"devrait gérer les routes Mayan avec latences variables"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Jupiter Trading - Tests de connectivité"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Jupiter Trading - Tests de connectivité devrait gérer les quotes avec le mint PENGU","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146332249,"status":"passed","title":"devrait gérer les quotes avec le mint PENGU"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Jupiter Trading - Tests de connectivité"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Jupiter Trading - Tests de connectivité devrait gérer les swaps asLegacyTransaction","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146332256,"status":"passed","title":"devrait gérer les swaps asLegacyTransaction"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Orca Liquidity - Tests de connectivité"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Orca Liquidity - Tests de connectivité devrait gérer les erreurs \"insufficient balance\"","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146332261,"status":"passed","title":"devrait gérer les erreurs \"insufficient balance\""},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Tests de résilience globale"],"duration":219,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Tests de résilience globale devrait gérer les erreurs réseau avec retry","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146332264,"status":"passed","title":"devrait gérer les erreurs réseau avec retry"},{"ancestorTitles":["Smoke Tests - Tests de connectivité par brique","Tests de résilience globale"],"duration":1525,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Smoke Tests - Tests de connectivité par brique Tests de résilience globale devrait gérer les timeouts avec backoff exponentiel","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146332485,"status":"passed","title":"devrait gérer les timeouts avec backoff exponentiel"}],"endTime":1758146334016,"message":"","name":"C:\\b.pengu\\tests\\smoke.test.ts","startTime":1758146331588,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["WalletManager"],"duration":112,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait initialiser le bon nombre de wallets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146334559,"status":"passed","title":"devrait initialiser le bon nombre de wallets"},{"ancestorTitles":["WalletManager"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait dériver des wallets avec des adresses valides","invocations":1,"location":null,"numPassingAsserts":35,"retryReasons":[],"startAt":1758146334672,"status":"passed","title":"devrait dériver des wallets avec des adresses valides"},{"ancestorTitles":["WalletManager"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait récupérer un wallet par index","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146334783,"status":"passed","title":"devrait récupérer un wallet par index"},{"ancestorTitles":["WalletManager"],"duration":117,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait retourner undefined pour un index invalide","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146334895,"status":"passed","title":"devrait retourner undefined pour un index invalide"},{"ancestorTitles":["WalletManager"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait récupérer un wallet aléatoire","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146335013,"status":"passed","title":"devrait récupérer un wallet aléatoire"},{"ancestorTitles":["WalletManager"],"duration":118,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait avoir des adresses différentes pour chaque wallet","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146335127,"status":"passed","title":"devrait avoir des adresses différentes pour chaque wallet"},{"ancestorTitles":["WalletManager"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WalletManager devrait avoir des adresses EVM différentes pour chaque wallet","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146335246,"status":"passed","title":"devrait avoir des adresses EVM différentes pour chaque wallet"}],"endTime":1758146335357,"message":"","name":"C:\\b.pengu\\tests\\wallets.test.ts","startTime":1758146334059,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 1 - Happy path (1 wallet)","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758146336109,"status":"passed","title":"Test 1 - Happy path (1 wallet)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 2 - Fallback CEX (Bybit → Binance)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146336124,"status":"passed","title":"Test 2 - Fallback CEX (Bybit → Binance)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 3 - Résilience (retry Li.Fi, slippage Jupiter)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146336130,"status":"passed","title":"Test 3 - Résilience (retry Li.Fi, slippage Jupiter)"},{"ancestorTitles":["E2E Flow - PENGU Bot (100% simulé)"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Flow - PENGU Bot (100% simulé) Test 4 - Performance mini (5 wallets)","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146336135,"status":"passed","title":"Test 4 - Performance mini (5 wallets)"}],"endTime":1758146336146,"message":"","name":"C:\\b.pengu\\tests\\e2e\\flow.test.ts","startTime":1758146335378,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot (Version Simple)","Test de base - Chaîne complète sur 1 wallet"],"duration":22,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot (Version Simple) Test de base - Chaîne complète sur 1 wallet devrait exécuter la chaîne complète : retrait → bridge → swap → liquidité","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1758146336877,"status":"passed","title":"devrait exécuter la chaîne complète : retrait → bridge → swap → liquidité"},{"ancestorTitles":["Tests d'intégration end-to-end PENGU Bot (Version Simple)","Test de performance - 5 wallets en parallèle"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests d'intégration end-to-end PENGU Bot (Version Simple) Test de performance - 5 wallets en parallèle devrait traiter 5 wallets en parallèle avec succès","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758146336900,"status":"passed","title":"devrait traiter 5 wallets en parallèle avec succès"}],"endTime":1758146336915,"message":"","name":"C:\\b.pengu\\tests\\e2e.simple.test.ts","startTime":1758146336197,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de réussite CCTP"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de réussite CCTP devrait exécuter un bridge USDC ETH → USDC SPL avec CCTP et frais < 3%","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758146337240,"status":"passed","title":"devrait exécuter un bridge USDC ETH → USDC SPL avec CCTP et frais < 3%"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de fallback non-CCTP"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de fallback non-CCTP devrait utiliser une route non-CCTP si CCTP indisponible","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146337259,"status":"passed","title":"devrait utiliser une route non-CCTP si CCTP indisponible"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas de frais trop élevés"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas de frais trop élevés devrait rejeter une quote avec des frais > 3%","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146337265,"status":"passed","title":"devrait rejeter une quote avec des frais > 3%"},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Cas d'erreur ethers mock"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Cas d'erreur ethers mock devrait gérer l'erreur \"evmWallet.signTransaction is not a function\"","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146337271,"status":"passed","title":"devrait gérer l'erreur \"evmWallet.signTransaction is not a function\""},{"ancestorTitles":["E2E Bridge - Abstract via Jumper/Li.Fi","Résumé des diagnostics"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"E2E Bridge - Abstract via Jumper/Li.Fi Résumé des diagnostics devrait afficher un résumé JSON des résultats","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146337276,"status":"passed","title":"devrait afficher un résumé JSON des résultats"}],"endTime":1758146337284,"message":"","name":"C:\\b.pengu\\tests\\e2e\\bridge.abs.test.ts","startTime":1758146336981,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Monitoring continu"],"duration":136,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Monitoring continu devrait surveiller les soldes en continu et déclencher des alertes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146337470,"status":"passed","title":"devrait surveiller les soldes en continu et déclencher des alertes"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Monitoring continu"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Monitoring continu devrait détecter les soldes faibles et déclencher des recharges","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146337608,"status":"passed","title":"devrait détecter les soldes faibles et déclencher des recharges"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Métriques de performance"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Métriques de performance devrait collecter et analyser les métriques de performance","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758146337613,"status":"passed","title":"devrait collecter et analyser les métriques de performance"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Métriques de performance"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Métriques de performance devrait détecter les problèmes de performance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146337618,"status":"passed","title":"devrait détecter les problèmes de performance"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Gestion des alertes"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Gestion des alertes devrait prévenir le spam d'alertes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146337626,"status":"passed","title":"devrait prévenir le spam d'alertes"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Surveillance des risques"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Surveillance des risques devrait détecter les risques élevés","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146337630,"status":"passed","title":"devrait détecter les risques élevés"},{"ancestorTitles":["Tests de monitoring et métriques end-to-end","Tests de résilience du monitoring"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Tests de monitoring et métriques end-to-end Tests de résilience du monitoring devrait continuer à fonctionner malgré les erreurs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146337636,"status":"passed","title":"devrait continuer à fonctionner malgré les erreurs"}],"endTime":1758146337651,"message":"","name":"C:\\b.pengu\\tests\\monitoring.e2e.test.ts","startTime":1758146337344,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MonitorManager","start"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager start devrait démarrer le monitoring","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146337828,"status":"passed","title":"devrait démarrer le monitoring"},{"ancestorTitles":["MonitorManager","start"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager start devrait ne pas redémarrer si déjà en cours","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146337844,"status":"passed","title":"devrait ne pas redémarrer si déjà en cours"},{"ancestorTitles":["MonitorManager","stop"],"duration":12,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager stop devrait arrêter le monitoring","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146337855,"status":"passed","title":"devrait arrêter le monitoring"},{"ancestorTitles":["MonitorManager","getMetrics"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager getMetrics devrait récupérer les métriques de monitoring","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758146337869,"status":"passed","title":"devrait récupérer les métriques de monitoring"},{"ancestorTitles":["MonitorManager","getMetrics"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager getMetrics devrait gérer les erreurs lors de la récupération des métriques","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146337873,"status":"passed","title":"devrait gérer les erreurs lors de la récupération des métriques"},{"ancestorTitles":["MonitorManager","sendAlert"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager sendAlert devrait envoyer une alerte","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146337877,"status":"passed","title":"devrait envoyer une alerte"},{"ancestorTitles":["MonitorManager","sendAlert"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager sendAlert devrait éviter le spam d'alertes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146337880,"status":"passed","title":"devrait éviter le spam d'alertes"},{"ancestorTitles":["MonitorManager","handleError"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager handleError devrait gérer les erreurs avec compteur","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146337884,"status":"passed","title":"devrait gérer les erreurs avec compteur"},{"ancestorTitles":["MonitorManager","checkSystemHealth"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager checkSystemHealth devrait vérifier la santé du système","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758146337889,"status":"passed","title":"devrait vérifier la santé du système"},{"ancestorTitles":["MonitorManager","checkSystemHealth"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager checkSystemHealth devrait alerter en cas de problème de connectivité","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146337894,"status":"passed","title":"devrait alerter en cas de problème de connectivité"},{"ancestorTitles":["MonitorManager","monitorPerformance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager monitorPerformance devrait surveiller les performances","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146337896,"status":"passed","title":"devrait surveiller les performances"},{"ancestorTitles":["MonitorManager","monitorRisks"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager monitorRisks devrait surveiller les risques","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146337900,"status":"passed","title":"devrait surveiller les risques"},{"ancestorTitles":["MonitorManager","getBotState"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MonitorManager getBotState devrait retourner l'état du bot","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146337903,"status":"passed","title":"devrait retourner l'état du bot"}],"endTime":1758146337908,"message":"","name":"C:\\b.pengu\\tests\\monitor.test.ts","startTime":1758146337690,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["LiquidityManager","openPosition"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPosition devrait ouvrir une position de liquidité concentrée","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146338068,"status":"passed","title":"devrait ouvrir une position de liquidité concentrée"},{"ancestorTitles":["LiquidityManager","openPosition"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPosition devrait échouer si le solde USDC est insuffisant","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338072,"status":"passed","title":"devrait échouer si le solde USDC est insuffisant"},{"ancestorTitles":["LiquidityManager","openPosition"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPosition devrait échouer si les ticks sont invalides","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338075,"status":"passed","title":"devrait échouer si les ticks sont invalides"},{"ancestorTitles":["LiquidityManager","openPosition"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPosition devrait gérer l'allocation de capital","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338078,"status":"passed","title":"devrait gérer l'allocation de capital"},{"ancestorTitles":["LiquidityManager","openPositionWithRange"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPositionWithRange devrait ouvrir une position avec plage de prix automatique","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1758146338081,"status":"passed","title":"devrait ouvrir une position avec plage de prix automatique"},{"ancestorTitles":["LiquidityManager","openPositionWithRange"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager openPositionWithRange devrait échouer si le prix du pool ne peut pas être récupéré","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338085,"status":"passed","title":"devrait échouer si le prix du pool ne peut pas être récupéré"},{"ancestorTitles":["LiquidityManager","calculateOptimalTicks"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager calculateOptimalTicks devrait calculer les ticks optimaux","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146338088,"status":"passed","title":"devrait calculer les ticks optimaux"},{"ancestorTitles":["LiquidityManager","calculateOptimalTicks"],"duration":25,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager calculateOptimalTicks devrait échouer si le pool n'existe pas","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338090,"status":"passed","title":"devrait échouer si le pool n'existe pas"},{"ancestorTitles":["LiquidityManager","validateTicks"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager validateTicks devrait valider des ticks corrects","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338116,"status":"passed","title":"devrait valider des ticks corrects"},{"ancestorTitles":["LiquidityManager","validateTicks"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager validateTicks devrait rejeter des ticks invalides (lower >= upper)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338119,"status":"passed","title":"devrait rejeter des ticks invalides (lower >= upper)"},{"ancestorTitles":["LiquidityManager","validateTicks"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager validateTicks devrait rejeter des ticks avec une plage trop petite","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338123,"status":"passed","title":"devrait rejeter des ticks avec une plage trop petite"},{"ancestorTitles":["LiquidityManager","priceToTick"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager priceToTick devrait convertir un prix en tick","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338125,"status":"passed","title":"devrait convertir un prix en tick"},{"ancestorTitles":["LiquidityManager","getTokenBalance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager getTokenBalance devrait récupérer le solde d'un token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338129,"status":"passed","title":"devrait récupérer le solde d'un token"},{"ancestorTitles":["LiquidityManager","getTokenBalance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager getTokenBalance devrait retourner 0 si aucun compte de token trouvé","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338131,"status":"passed","title":"devrait retourner 0 si aucun compte de token trouvé"},{"ancestorTitles":["LiquidityManager","checkConnectivity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager checkConnectivity devrait vérifier la connectivité","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338134,"status":"passed","title":"devrait vérifier la connectivité"},{"ancestorTitles":["LiquidityManager","checkConnectivity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LiquidityManager checkConnectivity devrait détecter les problèmes de connectivité","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338137,"status":"passed","title":"devrait détecter les problèmes de connectivité"}],"endTime":1758146338141,"message":"","name":"C:\\b.pengu\\tests\\liquidity.test.ts","startTime":1758146337940,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Imports Guard - Prévention des modules legacy"],"duration":41,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Imports Guard - Prévention des modules legacy ne devrait pas importer de modules legacy","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338303,"status":"passed","title":"ne devrait pas importer de modules legacy"},{"ancestorTitles":["Imports Guard - Prévention des modules legacy"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Imports Guard - Prévention des modules legacy devrait maintenir la liste des modules interdits à jour","invocations":1,"location":null,"numPassingAsserts":19,"retryReasons":[],"startAt":1758146338345,"status":"passed","title":"devrait maintenir la liste des modules interdits à jour"}],"endTime":1758146338352,"message":"","name":"C:\\b.pengu\\tests\\meta\\imports.guard.test.ts","startTime":1758146338171,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["BridgeManager","bridgeFunds"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager bridgeFunds devrait réussir un bridge BSC vers Solana","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146338495,"status":"passed","title":"devrait réussir un bridge BSC vers Solana"},{"ancestorTitles":["BridgeManager","bridgeFunds"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager bridgeFunds devrait gérer les frais trop élevés","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338507,"status":"passed","title":"devrait gérer les frais trop élevés"},{"ancestorTitles":["BridgeManager","bridgeFunds"],"duration":19,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager bridgeFunds devrait gérer les erreurs de réseau avec retry","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146338516,"status":"passed","title":"devrait gérer les erreurs de réseau avec retry"},{"ancestorTitles":["BridgeManager","bridgeFunds"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager bridgeFunds devrait gérer les chaînes supportées","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338537,"status":"passed","title":"devrait gérer les chaînes supportées"},{"ancestorTitles":["BridgeManager","getBridgeQuote"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager getBridgeQuote devrait récupérer un devis de bridge valide","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146338547,"status":"passed","title":"devrait récupérer un devis de bridge valide"},{"ancestorTitles":["BridgeManager","getBridgeQuote"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager getBridgeQuote devrait retourner null si aucun devis disponible","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338552,"status":"passed","title":"devrait retourner null si aucun devis disponible"},{"ancestorTitles":["BridgeManager","getBridgeQuote"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager getBridgeQuote devrait gérer les erreurs d'API","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338557,"status":"passed","title":"devrait gérer les erreurs d'API"},{"ancestorTitles":["BridgeManager","checkConnectivity"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager checkConnectivity devrait vérifier la connectivité de l'API Li.Fi","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338562,"status":"passed","title":"devrait vérifier la connectivité de l'API Li.Fi"},{"ancestorTitles":["BridgeManager","checkConnectivity"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BridgeManager checkConnectivity devrait détecter les problèmes de connectivité","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338565,"status":"passed","title":"devrait détecter les problèmes de connectivité"}],"endTime":1758146338569,"message":"","name":"C:\\b.pengu\\tests\\bridge.test.ts","startTime":1758146338373,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["TradingManager","getSwapQuote"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager getSwapQuote devrait récupérer un devis de swap valide","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1758146338773,"status":"passed","title":"devrait récupérer un devis de swap valide"},{"ancestorTitles":["TradingManager","getSwapQuote"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager getSwapQuote devrait retourner null si aucun devis disponible","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338781,"status":"passed","title":"devrait retourner null si aucun devis disponible"},{"ancestorTitles":["TradingManager","getSwapQuote"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager getSwapQuote devrait gérer les erreurs d'API","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338783,"status":"passed","title":"devrait gérer les erreurs d'API"},{"ancestorTitles":["TradingManager","swapUsdcToPengu"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager swapUsdcToPengu devrait effectuer un swap USDC vers PENGU avec succès","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1758146338785,"status":"passed","title":"devrait effectuer un swap USDC vers PENGU avec succès"},{"ancestorTitles":["TradingManager","swapUsdcToPengu"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager swapUsdcToPengu devrait gérer les erreurs de swap","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338790,"status":"passed","title":"devrait gérer les erreurs de swap"},{"ancestorTitles":["TradingManager","swapPenguToUsdc"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager swapPenguToUsdc devrait effectuer un swap PENGU vers USDC avec succès","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338793,"status":"passed","title":"devrait effectuer un swap PENGU vers USDC avec succès"},{"ancestorTitles":["TradingManager","swapPenguToUsdc"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager swapPenguToUsdc devrait gérer les erreurs de swap","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338802,"status":"passed","title":"devrait gérer les erreurs de swap"},{"ancestorTitles":["TradingManager","getTokenBalance"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager getTokenBalance devrait récupérer le solde d'un token","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338806,"status":"passed","title":"devrait récupérer le solde d'un token"},{"ancestorTitles":["TradingManager","getTokenBalance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager getTokenBalance devrait retourner 0 si aucun compte de token trouvé","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338810,"status":"passed","title":"devrait retourner 0 si aucun compte de token trouvé"},{"ancestorTitles":["TradingManager","checkConnectivity"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager checkConnectivity devrait vérifier la connectivité de l'API Jupiter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1758146338812,"status":"passed","title":"devrait vérifier la connectivité de l'API Jupiter"},{"ancestorTitles":["TradingManager","checkConnectivity"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TradingManager checkConnectivity devrait détecter les problèmes de connectivité","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1758146338816,"status":"passed","title":"devrait détecter les problèmes de connectivité"}],"endTime":1758146338821,"message":"","name":"C:\\b.pengu\\tests\\trading.test.ts","startTime":1758146338649,"status":"passed","summary":""}],"wasInterrupted":false}
